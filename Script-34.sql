SAVEPOINT BUpdate

/*
 * 
	MERGE INTO t 
	USING (SELECT * FROM tt WHERE acol = 2) AS vals(x,y) 
	ON t.id = vals.x
	WHEN MATCHED THEN UPDATE SET t.description = vals.y
	WHEN NOT MATCHED THEN INSERT VALUES vals.x, vals.y
 * 
 */

MERGE INTO PUBLIC.DIRECTORS AS D
USING (
    SELECT 
        D.DIRECTOR_ID,
        max(
        		DATEADD('YEAR', 1, M.MOVIE_LAUNCH_DATE)
        	) AS MOVIE_LAUNCH_DATE
    FROM PUBLIC.MOVIES AS M
    JOIN PUBLIC.DIRECTORS AS D
    ON M.DIRECTOR_ID = D.DIRECTOR_ID
    WHERE (D.DIRECTOR_BIRTH_DATE > M.MOVIE_LAUNCH_DATE OR D.DIRECTOR_DEAD_DATE < M.MOVIE_LAUNCH_DATE)
    AND D.DIRECTOR_DEAD_DATE IS NOT NULL
    GROUP BY D.DIRECTOR_ID
) AS valor
ON D.DIRECTOR_ID = valor.DIRECTOR_ID
WHEN MATCHED THEN UPDATE SET D.DIRECTOR_DEAD_DATE = valor.MOVIE_LAUNCH_DATE;




/*
 * Consulta de ejercicio 33
 * 
SELECT 
	D.DIRECTOR_NAME,
	D.DIRECTOR_BIRTH_DATE,
	D.DIRECTOR_DEAD_DATE,
	M.MOVIE_LAUNCH_DATE
FROM PUBLIC.MOVIES AS M
JOIN PUBLIC.DIRECTORS AS D
ON M.DIRECTOR_ID = D.DIRECTOR_ID
WHERE ( (D.DIRECTOR_BIRTH_DATE > M.MOVIE_LAUNCH_DATE)	OR (D.DIRECTOR_DEAD_DATE < M.MOVIE_LAUNCH_DATE) ) AND D.DIRECTOR_DEAD_DATE IS NOT NULL;
 * 
 * 
 * 
 */
